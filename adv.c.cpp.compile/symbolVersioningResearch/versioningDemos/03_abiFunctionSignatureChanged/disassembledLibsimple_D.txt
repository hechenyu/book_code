
libsimple.so:     file format elf32-i386


Disassembly of section .note.gnu.build-id:

00000114 <.note.gnu.build-id>:
 114:	04 00                	add    al,0x0
 116:	00 00                	add    BYTE PTR [eax],al
 118:	14 00                	adc    al,0x0
 11a:	00 00                	add    BYTE PTR [eax],al
 11c:	03 00                	add    eax,DWORD PTR [eax]
 11e:	00 00                	add    BYTE PTR [eax],al
 120:	47                   	inc    edi
 121:	4e                   	dec    esi
 122:	55                   	push   ebp
 123:	00 ce                	add    dh,cl
 125:	ea 86 b5 0b ca e2 08 	jmp    0x8e2:0xca0bb586
 12c:	e3 eb                	jecxz  119 <LIBSIMPLE_1.0+0x119>
 12e:	32 e9                	xor    ch,cl
 130:	de 24 1c             	fisub  WORD PTR [esp+ebx*1]
 133:	3d 61 ed 48 5e       	cmp    eax,0x5e48ed61

Disassembly of section .gnu.hash:

00000138 <.gnu.hash>:
 138:	03 00                	add    eax,DWORD PTR [eax]
 13a:	00 00                	add    BYTE PTR [eax],al
 13c:	05 00 00 00 02       	add    eax,0x2000000
 141:	00 00                	add    BYTE PTR [eax],al
 143:	00 06                	add    BYTE PTR [esi],al
 145:	00 00                	add    BYTE PTR [eax],al
 147:	00 44 80 04          	add    BYTE PTR [eax+eax*4+0x4],al
 14b:	90                   	nop
 14c:	00 10                	add    BYTE PTR [eax],dl
 14e:	70 28                	jo     178 <LIBSIMPLE_1.0+0x178>
 150:	05 00 00 00 06       	add    eax,0x6000000
 155:	00 00                	add    BYTE PTR [eax],al
 157:	00 0a                	add    BYTE PTR [edx],cl
 159:	00 00                	add    BYTE PTR [eax],al
 15b:	00 c3                	add    bl,al
 15d:	cb                   	retf   
 15e:	2e                   	cs
 15f:	10 f4                	adc    ah,dh
 161:	66 c5 af 34 6b c5 af 	lds    bp,DWORD PTR [edi-0x503a94cc]
 168:	76 6f                	jbe    1d9 <LIBSIMPLE_1.0+0x1d9>
 16a:	c5 af 07 d7 6d b2    	lds    ebp,FWORD PTR [edi-0x4d9228f9]
 170:	f4                   	hlt    
 171:	66 c5 af d2 77 65 52 	lds    bp,DWORD PTR [edi+0x526577d2]
 178:	d2                   	(bad)  
 179:	77 65                	ja     1e0 <LIBSIMPLE_1.0+0x1e0>
 17b:	52                   	push   edx
 17c:	d3                   	(bad)  
 17d:	77 65                	ja     1e4 <LIBSIMPLE_1.0+0x1e4>
 17f:	52                   	push   edx

Disassembly of section .dynsym:

00000180 <.dynsym>:
	...
 190:	33 00                	xor    eax,DWORD PTR [eax]
	...
 19a:	00 00                	add    BYTE PTR [eax],al
 19c:	12 00                	adc    al,BYTE PTR [eax]
 19e:	00 00                	add    BYTE PTR [eax],al
 1a0:	10 00                	adc    BYTE PTR [eax],al
	...
 1aa:	00 00                	add    BYTE PTR [eax],al
 1ac:	22 00                	and    al,BYTE PTR [eax]
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	01 00                	add    DWORD PTR [eax],eax
	...
 1ba:	00 00                	add    BYTE PTR [eax],al
 1bc:	20 00                	and    BYTE PTR [eax],al
 1be:	00 00                	add    BYTE PTR [eax],al
 1c0:	1f                   	pop    ds
	...
 1c9:	00 00                	add    BYTE PTR [eax],al
 1cb:	00 20                	add    BYTE PTR [eax],ah
 1cd:	00 00                	add    BYTE PTR [eax],al
 1cf:	00 4a 00             	add    BYTE PTR [edx+0x0],cl
 1d2:	00 00                	add    BYTE PTR [eax],al
 1d4:	94                   	xchg   esp,eax
 1d5:	06                   	push   es
 1d6:	00 00                	add    BYTE PTR [eax],al
 1d8:	36 00 00             	add    BYTE PTR ss:[eax],al
 1db:	00 12                	add    BYTE PTR [edx],dl
 1dd:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 1e0:	86 00                	xchg   BYTE PTR [eax],al
	...
 1ea:	00 00                	add    BYTE PTR [eax],al
 1ec:	11 00                	adc    DWORD PTR [eax],eax
 1ee:	f1                   	icebp  
 1ef:	ff a2 00 00 00 00    	jmp    DWORD PTR [edx+0x0]
 1f5:	00 00                	add    BYTE PTR [eax],al
 1f7:	00 00                	add    BYTE PTR [eax],al
 1f9:	00 00                	add    BYTE PTR [eax],al
 1fb:	00 11                	add    BYTE PTR [ecx],dl
 1fd:	00 f1                	add    cl,dh
 1ff:	ff b0 00 00 00 00    	push   DWORD PTR [eax+0x0]
 205:	00 00                	add    BYTE PTR [eax],al
 207:	00 00                	add    BYTE PTR [eax],al
 209:	00 00                	add    BYTE PTR [eax],al
 20b:	00 11                	add    BYTE PTR [ecx],dl
 20d:	00 f1                	add    cl,dh
 20f:	ff                   	(bad)  
 210:	3a 00                	cmp    al,BYTE PTR [eax]
 212:	00 00                	add    BYTE PTR [eax],al
 214:	28 06                	sub    BYTE PTR [esi],al
 216:	00 00                	add    BYTE PTR [eax],al
 218:	36 00 00             	add    BYTE PTR ss:[eax],al
 21b:	00 12                	add    BYTE PTR [edx],dl
 21d:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 220:	94                   	xchg   esp,eax
	...
 229:	00 00                	add    BYTE PTR [eax],al
 22b:	00 11                	add    BYTE PTR [ecx],dl
 22d:	00 f1                	add    cl,dh
 22f:	ff 5a 00             	call   FWORD PTR [edx+0x0]
 232:	00 00                	add    BYTE PTR [eax],al
 234:	ee                   	out    dx,al
 235:	05 00 00 3a 00       	add    eax,0x3a0000
 23a:	00 00                	add    BYTE PTR [eax],al
 23c:	12 00                	adc    al,BYTE PTR [eax]
 23e:	0c 00                	or     al,0x0
 240:	5a                   	pop    edx
 241:	00 00                	add    BYTE PTR [eax],al
 243:	00 7c 05 00          	add    BYTE PTR [ebp+eax*1+0x0],bh
 247:	00 36                	add    BYTE PTR [esi],dh
 249:	00 00                	add    BYTE PTR [eax],al
 24b:	00 12                	add    BYTE PTR [edx],dl
 24d:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 250:	5a                   	pop    edx
 251:	00 00                	add    BYTE PTR [eax],al
 253:	00 b2 05 00 00 3c    	add    BYTE PTR [edx+0x3c000005],dh
 259:	00 00                	add    BYTE PTR [eax],al
 25b:	00 12                	add    BYTE PTR [edx],dl
 25d:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl

Disassembly of section .dynstr:

00000260 <.dynstr>:
 260:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 263:	67 6d                	ins    DWORD PTR es:[di],dx
 265:	6f                   	outs   dx,DWORD PTR ds:[esi]
 266:	6e                   	outs   dx,BYTE PTR ds:[esi]
 267:	5f                   	pop    edi
 268:	73 74                	jae    2de <LIBSIMPLE_1.0+0x2de>
 26a:	61                   	popa   
 26b:	72 74                	jb     2e1 <LIBSIMPLE_1.0+0x2e1>
 26d:	5f                   	pop    edi
 26e:	5f                   	pop    edi
 26f:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 272:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 275:	5f                   	pop    edi
 276:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 27c:	7a 65                	jp     2e3 <LIBSIMPLE_1.0+0x2e3>
 27e:	00 5f 4a             	add    BYTE PTR [edi+0x4a],bl
 281:	76 5f                	jbe    2e2 <LIBSIMPLE_1.0+0x2e2>
 283:	52                   	push   edx
 284:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
 28b:	43 6c 
 28d:	61                   	popa   
 28e:	73 73                	jae    303 <LIBSIMPLE_1.0+0x303>
 290:	65                   	gs
 291:	73 00                	jae    293 <LIBSIMPLE_1.0+0x293>
 293:	70 72                	jo     307 <LIBSIMPLE_1.0+0x307>
 295:	69 6e 74 66 00 73 65 	imul   ebp,DWORD PTR [esi+0x74],0x65730066
 29c:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 29f:	64                   	fs
 2a0:	5f                   	pop    edi
 2a1:	66                   	data16
 2a2:	75 6e                	jne    312 <LIBSIMPLE_1.0+0x312>
 2a4:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 2a8:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2a9:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
 2ac:	75 72                	jne    320 <LIBSIMPLE_1.0+0x320>
 2ae:	74 68                	je     318 <LIBSIMPLE_1.0+0x318>
 2b0:	5f                   	pop    edi
 2b1:	66                   	data16
 2b2:	75 6e                	jne    322 <LIBSIMPLE_1.0+0x322>
 2b4:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 2b8:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2b9:	00 66 69             	add    BYTE PTR [esi+0x69],ah
 2bc:	72 73                	jb     331 <LIBSIMPLE_1.0+0x331>
 2be:	74 5f                	je     31f <LIBSIMPLE_1.0+0x31f>
 2c0:	66                   	data16
 2c1:	75 6e                	jne    331 <LIBSIMPLE_1.0+0x331>
 2c3:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 2c7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2c8:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 2cc:	63 2e                	arpl   WORD PTR [esi],bp
 2ce:	73 6f                	jae    33f <LIBSIMPLE_1.0+0x33f>
 2d0:	2e 36 00 6c 69 62    	cs add BYTE PTR cs:ss:[ecx+ebp*2+0x62],ch
 2d6:	73 69                	jae    341 <LIBSIMPLE_1.0+0x341>
 2d8:	6d                   	ins    DWORD PTR es:[edi],dx
 2d9:	70 6c                	jo     347 <LIBSIMPLE_1.0+0x347>
 2db:	65                   	gs
 2dc:	2e                   	cs
 2dd:	73 6f                	jae    34e <LIBSIMPLE_1.0+0x34e>
 2df:	2e 31 2e             	xor    DWORD PTR cs:[esi],ebp
 2e2:	30 2e                	xor    BYTE PTR [esi],ch
 2e4:	30 00                	xor    BYTE PTR [eax],al
 2e6:	4c                   	dec    esp
 2e7:	49                   	dec    ecx
 2e8:	42                   	inc    edx
 2e9:	53                   	push   ebx
 2ea:	49                   	dec    ecx
 2eb:	4d                   	dec    ebp
 2ec:	50                   	push   eax
 2ed:	4c                   	dec    esp
 2ee:	45                   	inc    ebp
 2ef:	5f                   	pop    edi
 2f0:	31 2e                	xor    DWORD PTR [esi],ebp
 2f2:	30 00                	xor    BYTE PTR [eax],al
 2f4:	4c                   	dec    esp
 2f5:	49                   	dec    ecx
 2f6:	42                   	inc    edx
 2f7:	53                   	push   ebx
 2f8:	49                   	dec    ecx
 2f9:	4d                   	dec    ebp
 2fa:	50                   	push   eax
 2fb:	4c                   	dec    esp
 2fc:	45                   	inc    ebp
 2fd:	5f                   	pop    edi
 2fe:	31 2e                	xor    DWORD PTR [esi],ebp
 300:	31 00                	xor    DWORD PTR [eax],eax
 302:	4c                   	dec    esp
 303:	49                   	dec    ecx
 304:	42                   	inc    edx
 305:	53                   	push   ebx
 306:	49                   	dec    ecx
 307:	4d                   	dec    ebp
 308:	50                   	push   eax
 309:	4c                   	dec    esp
 30a:	45                   	inc    ebp
 30b:	5f                   	pop    edi
 30c:	32 2e                	xor    ch,BYTE PTR [esi]
 30e:	30 00                	xor    BYTE PTR [eax],al
 310:	4c                   	dec    esp
 311:	49                   	dec    ecx
 312:	42                   	inc    edx
 313:	53                   	push   ebx
 314:	49                   	dec    ecx
 315:	4d                   	dec    ebp
 316:	50                   	push   eax
 317:	4c                   	dec    esp
 318:	45                   	inc    ebp
 319:	5f                   	pop    edi
 31a:	33 2e                	xor    ebp,DWORD PTR [esi]
 31c:	30 00                	xor    BYTE PTR [eax],al
 31e:	47                   	inc    edi
 31f:	4c                   	dec    esp
 320:	49                   	dec    ecx
 321:	42                   	inc    edx
 322:	43                   	inc    ebx
 323:	5f                   	pop    edi
 324:	32 2e                	xor    ch,BYTE PTR [esi]
 326:	31 2e                	xor    DWORD PTR [esi],ebp
 328:	33 00                	xor    eax,DWORD PTR [eax]
 32a:	47                   	inc    edi
 32b:	4c                   	dec    esp
 32c:	49                   	dec    ecx
 32d:	42                   	inc    edx
 32e:	43                   	inc    ebx
 32f:	5f                   	pop    edi
 330:	32 2e                	xor    ch,BYTE PTR [esi]
 332:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

00000334 <.gnu.version>:
 334:	00 00                	add    BYTE PTR [eax],al
 336:	06                   	push   es
 337:	00 07                	add    BYTE PTR [edi],al
 339:	00 00                	add    BYTE PTR [eax],al
 33b:	00 00                	add    BYTE PTR [eax],al
 33d:	00 03                	add    BYTE PTR [ebx],al
 33f:	00 02                	add    BYTE PTR [edx],al
 341:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 344:	05 00 02 00 03       	add    eax,0x3000200
 349:	00 05 00 02 80 04    	add    BYTE PTR ds:0x4800200,al
 34f:	80                   	.byte 0x80

Disassembly of section .gnu.version_d:

00000350 <.gnu.version_d>:
 350:	01 00                	add    DWORD PTR [eax],eax
 352:	01 00                	add    DWORD PTR [eax],eax
 354:	01 00                	add    DWORD PTR [eax],eax
 356:	01 00                	add    DWORD PTR [eax],eax
 358:	b0 ee                	mov    al,0xee
 35a:	4f                   	dec    edi
 35b:	03 14 00             	add    edx,DWORD PTR [eax+eax*1]
 35e:	00 00                	add    BYTE PTR [eax],al
 360:	1c 00                	sbb    al,0x0
 362:	00 00                	add    BYTE PTR [eax],al
 364:	73 00                	jae    366 <LIBSIMPLE_1.0+0x366>
 366:	00 00                	add    BYTE PTR [eax],al
 368:	00 00                	add    BYTE PTR [eax],al
 36a:	00 00                	add    BYTE PTR [eax],al
 36c:	01 00                	add    DWORD PTR [eax],eax
 36e:	00 00                	add    BYTE PTR [eax],al
 370:	02 00                	add    al,BYTE PTR [eax]
 372:	01 00                	add    DWORD PTR [eax],eax
 374:	60                   	pusha  
 375:	5e                   	pop    esi
 376:	de 05 14 00 00 00    	fiadd  WORD PTR ds:0x14
 37c:	1c 00                	sbb    al,0x0
 37e:	00 00                	add    BYTE PTR [eax],al
 380:	86 00                	xchg   BYTE PTR [eax],al
 382:	00 00                	add    BYTE PTR [eax],al
 384:	00 00                	add    BYTE PTR [eax],al
 386:	00 00                	add    BYTE PTR [eax],al
 388:	01 00                	add    DWORD PTR [eax],eax
 38a:	00 00                	add    BYTE PTR [eax],al
 38c:	03 00                	add    eax,DWORD PTR [eax]
 38e:	01 00                	add    DWORD PTR [eax],eax
 390:	61                   	popa   
 391:	5e                   	pop    esi
 392:	de 05 14 00 00 00    	fiadd  WORD PTR ds:0x14
 398:	1c 00                	sbb    al,0x0
 39a:	00 00                	add    BYTE PTR [eax],al
 39c:	94                   	xchg   esp,eax
 39d:	00 00                	add    BYTE PTR [eax],al
 39f:	00 00                	add    BYTE PTR [eax],al
 3a1:	00 00                	add    BYTE PTR [eax],al
 3a3:	00 01                	add    BYTE PTR [ecx],al
 3a5:	00 00                	add    BYTE PTR [eax],al
 3a7:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 3aa:	01 00                	add    DWORD PTR [eax],eax
 3ac:	60                   	pusha  
 3ad:	5b                   	pop    ebx
 3ae:	de 05 14 00 00 00    	fiadd  WORD PTR ds:0x14
 3b4:	1c 00                	sbb    al,0x0
 3b6:	00 00                	add    BYTE PTR [eax],al
 3b8:	a2 00 00 00 00       	mov    ds:0x0,al
 3bd:	00 00                	add    BYTE PTR [eax],al
 3bf:	00 01                	add    BYTE PTR [ecx],al
 3c1:	00 00                	add    BYTE PTR [eax],al
 3c3:	00 05 00 01 00 60    	add    BYTE PTR ds:0x60000100,al
 3c9:	5c                   	pop    esp
 3ca:	de 05 14 00 00 00    	fiadd  WORD PTR ds:0x14
 3d0:	00 00                	add    BYTE PTR [eax],al
 3d2:	00 00                	add    BYTE PTR [eax],al
 3d4:	b0 00                	mov    al,0x0
 3d6:	00 00                	add    BYTE PTR [eax],al
 3d8:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .gnu.version_r:

000003dc <.gnu.version_r>:
 3dc:	01 00                	add    DWORD PTR [eax],eax
 3de:	02 00                	add    al,BYTE PTR [eax]
 3e0:	69 00 00 00 10 00    	imul   eax,DWORD PTR [eax],0x100000
 3e6:	00 00                	add    BYTE PTR [eax],al
 3e8:	00 00                	add    BYTE PTR [eax],al
 3ea:	00 00                	add    BYTE PTR [eax],al
 3ec:	73 1f                	jae    40d <LIBSIMPLE_1.0+0x40d>
 3ee:	69 09 00 00 07 00    	imul   ecx,DWORD PTR [ecx],0x70000
 3f4:	be 00 00 00 10       	mov    esi,0x10000000
 3f9:	00 00                	add    BYTE PTR [eax],al
 3fb:	00 10                	add    BYTE PTR [eax],dl
 3fd:	69 69 0d 00 00 06 00 	imul   ebp,DWORD PTR [ecx+0xd],0x60000
 404:	ca 00 00             	retf   0x0
 407:	00 00                	add    BYTE PTR [eax],al
 409:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

0000040c <.rel.dyn>:
 40c:	0c 20                	or     al,0x20
 40e:	00 00                	add    BYTE PTR [eax],al
 410:	08 00                	or     BYTE PTR [eax],al
 412:	00 00                	add    BYTE PTR [eax],al
 414:	e8 1f 00 00 06       	call   6000438 <_end+0x5ffe420>
 419:	02 00                	add    al,BYTE PTR [eax]
 41b:	00 ec                	add    ah,ch
 41d:	1f                   	pop    ds
 41e:	00 00                	add    BYTE PTR [eax],al
 420:	06                   	push   es
 421:	03 00                	add    eax,DWORD PTR [eax]
 423:	00 f0                	add    al,dh
 425:	1f                   	pop    ds
 426:	00 00                	add    BYTE PTR [eax],al
 428:	06                   	push   es
 429:	04 00                	add    al,0x0
	...

Disassembly of section .rel.plt:

0000042c <.rel.plt>:
 42c:	00 20                	add    BYTE PTR [eax],ah
 42e:	00 00                	add    BYTE PTR [eax],al
 430:	07                   	pop    es
 431:	01 00                	add    DWORD PTR [eax],eax
 433:	00 04 20             	add    BYTE PTR [eax+eiz*1],al
 436:	00 00                	add    BYTE PTR [eax],al
 438:	07                   	pop    es
 439:	02 00                	add    al,BYTE PTR [eax]
 43b:	00 08                	add    BYTE PTR [eax],cl
 43d:	20 00                	and    BYTE PTR [eax],al
 43f:	00 07                	add    BYTE PTR [edi],al
 441:	03 00                	add    eax,DWORD PTR [eax]
	...

Disassembly of section .init:

00000444 <_init>:
 444:	53                   	push   ebx
 445:	83 ec 08             	sub    esp,0x8
 448:	e8 00 00 00 00       	call   44d <_init+0x9>
 44d:	5b                   	pop    ebx
 44e:	81 c3 a7 1b 00 00    	add    ebx,0x1ba7
 454:	8b 83 f8 ff ff ff    	mov    eax,DWORD PTR [ebx-0x8]
 45a:	85 c0                	test   eax,eax
 45c:	74 05                	je     463 <_init+0x1f>
 45e:	e8 4d 00 00 00       	call   4b0 <__gmon_start__@plt>
 463:	e8 d8 00 00 00       	call   540 <frame_dummy>
 468:	e8 93 02 00 00       	call   700 <__do_global_ctors_aux>
 46d:	83 c4 08             	add    esp,0x8
 470:	5b                   	pop    ebx
 471:	c3                   	ret    

Disassembly of section .plt:

00000480 <printf@plt-0x10>:
 480:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 486:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 48c:	00 00                	add    BYTE PTR [eax],al
	...

00000490 <printf@plt>:
 490:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 496:	68 00 00 00 00       	push   0x0
 49b:	e9 e0 ff ff ff       	jmp    480 <_init+0x3c>

000004a0 <__cxa_finalize@plt>:
 4a0:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
 4a6:	68 08 00 00 00       	push   0x8
 4ab:	e9 d0 ff ff ff       	jmp    480 <_init+0x3c>

000004b0 <__gmon_start__@plt>:
 4b0:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 4b6:	68 10 00 00 00       	push   0x10
 4bb:	e9 c0 ff ff ff       	jmp    480 <_init+0x3c>

Disassembly of section .text:

000004c0 <__do_global_dtors_aux>:
 4c0:	55                   	push   ebp
 4c1:	89 e5                	mov    ebp,esp
 4c3:	56                   	push   esi
 4c4:	53                   	push   ebx
 4c5:	e8 ad 00 00 00       	call   577 <__i686.get_pc_thunk.bx>
 4ca:	81 c3 2a 1b 00 00    	add    ebx,0x1b2a
 4d0:	83 ec 10             	sub    esp,0x10
 4d3:	80 bb 1c 00 00 00 00 	cmp    BYTE PTR [ebx+0x1c],0x0
 4da:	75 5d                	jne    539 <__do_global_dtors_aux+0x79>
 4dc:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
 4e2:	85 c0                	test   eax,eax
 4e4:	74 0e                	je     4f4 <__do_global_dtors_aux+0x34>
 4e6:	8b 83 18 00 00 00    	mov    eax,DWORD PTR [ebx+0x18]
 4ec:	89 04 24             	mov    DWORD PTR [esp],eax
 4ef:	e8 ac ff ff ff       	call   4a0 <__cxa_finalize@plt>
 4f4:	8b 83 20 00 00 00    	mov    eax,DWORD PTR [ebx+0x20]
 4fa:	8d b3 1c ff ff ff    	lea    esi,[ebx-0xe4]
 500:	8d 93 18 ff ff ff    	lea    edx,[ebx-0xe8]
 506:	29 d6                	sub    esi,edx
 508:	c1 fe 02             	sar    esi,0x2
 50b:	83 ee 01             	sub    esi,0x1
 50e:	39 f0                	cmp    eax,esi
 510:	73 20                	jae    532 <__do_global_dtors_aux+0x72>
 512:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 518:	83 c0 01             	add    eax,0x1
 51b:	89 83 20 00 00 00    	mov    DWORD PTR [ebx+0x20],eax
 521:	ff 94 83 18 ff ff ff 	call   DWORD PTR [ebx+eax*4-0xe8]
 528:	8b 83 20 00 00 00    	mov    eax,DWORD PTR [ebx+0x20]
 52e:	39 f0                	cmp    eax,esi
 530:	72 e6                	jb     518 <__do_global_dtors_aux+0x58>
 532:	c6 83 1c 00 00 00 01 	mov    BYTE PTR [ebx+0x1c],0x1
 539:	83 c4 10             	add    esp,0x10
 53c:	5b                   	pop    ebx
 53d:	5e                   	pop    esi
 53e:	5d                   	pop    ebp
 53f:	c3                   	ret    

00000540 <frame_dummy>:
 540:	55                   	push   ebp
 541:	89 e5                	mov    ebp,esp
 543:	53                   	push   ebx
 544:	e8 2e 00 00 00       	call   577 <__i686.get_pc_thunk.bx>
 549:	81 c3 ab 1a 00 00    	add    ebx,0x1aab
 54f:	83 ec 14             	sub    esp,0x14
 552:	8b 93 20 ff ff ff    	mov    edx,DWORD PTR [ebx-0xe0]
 558:	85 d2                	test   edx,edx
 55a:	74 15                	je     571 <frame_dummy+0x31>
 55c:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 562:	85 c0                	test   eax,eax
 564:	74 0b                	je     571 <frame_dummy+0x31>
 566:	8d 93 20 ff ff ff    	lea    edx,[ebx-0xe0]
 56c:	89 14 24             	mov    DWORD PTR [esp],edx
 56f:	ff d0                	call   eax
 571:	83 c4 14             	add    esp,0x14
 574:	5b                   	pop    ebx
 575:	5d                   	pop    ebp
 576:	c3                   	ret    

00000577 <__i686.get_pc_thunk.bx>:
 577:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 57a:	c3                   	ret    
 57b:	90                   	nop

0000057c <first_function@LIBSIMPLE_1.0>:
#include <stdio.h>
#include "simple.h"

__asm__(".symver first_function_1_0,first_function@LIBSIMPLE_1.0");
int first_function_1_0(int x)
{
 57c:	55                   	push   ebp
 57d:	89 e5                	mov    ebp,esp
 57f:	53                   	push   ebx
 580:	83 ec 14             	sub    esp,0x14
 583:	e8 ef ff ff ff       	call   577 <__i686.get_pc_thunk.bx>
 588:	81 c3 6c 1a 00 00    	add    ebx,0x1a6c
    printf(" lib: %s\n", __FUNCTION__);
 58e:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 594:	8d 93 cc e7 ff ff    	lea    edx,[ebx-0x1834]
 59a:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 59e:	89 04 24             	mov    DWORD PTR [esp],eax
 5a1:	e8 ea fe ff ff       	call   490 <printf@plt>
    return (x+1);
 5a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 5a9:	83 c0 01             	add    eax,0x1
}
 5ac:	83 c4 14             	add    esp,0x14
 5af:	5b                   	pop    ebx
 5b0:	5d                   	pop    ebp
 5b1:	c3                   	ret    

000005b2 <first_function@LIBSIMPLE_2.0>:

__asm__(".symver first_function_2_0,first_function@LIBSIMPLE_2.0");
int first_function_2_0(int x)
{
 5b2:	55                   	push   ebp
 5b3:	89 e5                	mov    ebp,esp
 5b5:	53                   	push   ebx
 5b6:	83 ec 14             	sub    esp,0x14
 5b9:	e8 b9 ff ff ff       	call   577 <__i686.get_pc_thunk.bx>
 5be:	81 c3 36 1a 00 00    	add    ebx,0x1a36
    printf(" lib: %s\n", __FUNCTION__);
 5c4:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 5ca:	8d 93 b9 e7 ff ff    	lea    edx,[ebx-0x1847]
 5d0:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 5d4:	89 04 24             	mov    DWORD PTR [esp],eax
 5d7:	e8 b4 fe ff ff       	call   490 <printf@plt>
    return 1000*(x+1);
 5dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 5df:	83 c0 01             	add    eax,0x1
 5e2:	69 c0 e8 03 00 00    	imul   eax,eax,0x3e8
}
 5e8:	83 c4 14             	add    esp,0x14
 5eb:	5b                   	pop    ebx
 5ec:	5d                   	pop    ebp
 5ed:	c3                   	ret    

000005ee <first_function@@LIBSIMPLE_3.0>:

__asm__(".symver first_function_3_0,first_function@@LIBSIMPLE_3.0");
int first_function_3_0(int x, int normfactor)
{
 5ee:	55                   	push   ebp
 5ef:	89 e5                	mov    ebp,esp
 5f1:	53                   	push   ebx
 5f2:	83 ec 14             	sub    esp,0x14
 5f5:	e8 7d ff ff ff       	call   577 <__i686.get_pc_thunk.bx>
 5fa:	81 c3 fa 19 00 00    	add    ebx,0x19fa
    printf(" lib: %s\n", __FUNCTION__);
 600:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 606:	8d 93 a6 e7 ff ff    	lea    edx,[ebx-0x185a]
 60c:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 610:	89 04 24             	mov    DWORD PTR [esp],eax
 613:	e8 78 fe ff ff       	call   490 <printf@plt>
    return normfactor*(x+1);
 618:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 61b:	83 c0 01             	add    eax,0x1
 61e:	0f af 45 0c          	imul   eax,DWORD PTR [ebp+0xc]
}
 622:	83 c4 14             	add    esp,0x14
 625:	5b                   	pop    ebx
 626:	5d                   	pop    ebp
 627:	c3                   	ret    

00000628 <second_function>:

int second_function(int x)
{
 628:	55                   	push   ebp
 629:	89 e5                	mov    ebp,esp
 62b:	53                   	push   ebx
 62c:	83 ec 14             	sub    esp,0x14
 62f:	e8 43 ff ff ff       	call   577 <__i686.get_pc_thunk.bx>
 634:	81 c3 c0 19 00 00    	add    ebx,0x19c0
    printf(" lib: %s\n", __FUNCTION__);
 63a:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 640:	8d 93 96 e7 ff ff    	lea    edx,[ebx-0x186a]
 646:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 64a:	89 04 24             	mov    DWORD PTR [esp],eax
 64d:	e8 3e fe ff ff       	call   490 <printf@plt>
    return (x+2);
 652:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 655:	83 c0 02             	add    eax,0x2
}
 658:	83 c4 14             	add    esp,0x14
 65b:	5b                   	pop    ebx
 65c:	5d                   	pop    ebp
 65d:	c3                   	ret    

0000065e <third_function>:

int third_function(int x)
{
 65e:	55                   	push   ebp
 65f:	89 e5                	mov    ebp,esp
 661:	53                   	push   ebx
 662:	83 ec 14             	sub    esp,0x14
 665:	e8 0d ff ff ff       	call   577 <__i686.get_pc_thunk.bx>
 66a:	81 c3 8a 19 00 00    	add    ebx,0x198a
    printf(" lib: %s\n", __FUNCTION__);
 670:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 676:	8d 93 87 e7 ff ff    	lea    edx,[ebx-0x1879]
 67c:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 680:	89 04 24             	mov    DWORD PTR [esp],eax
 683:	e8 08 fe ff ff       	call   490 <printf@plt>
    return (x+3);
 688:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 68b:	83 c0 03             	add    eax,0x3
}
 68e:	83 c4 14             	add    esp,0x14
 691:	5b                   	pop    ebx
 692:	5d                   	pop    ebp
 693:	c3                   	ret    

00000694 <fourth_function>:

int fourth_function(int x)
{
 694:	55                   	push   ebp
 695:	89 e5                	mov    ebp,esp
 697:	53                   	push   ebx
 698:	83 ec 14             	sub    esp,0x14
 69b:	e8 d7 fe ff ff       	call   577 <__i686.get_pc_thunk.bx>
 6a0:	81 c3 54 19 00 00    	add    ebx,0x1954
    printf(" lib: %s\n", __FUNCTION__);
 6a6:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 6ac:	8d 93 77 e7 ff ff    	lea    edx,[ebx-0x1889]
 6b2:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 6b6:	89 04 24             	mov    DWORD PTR [esp],eax
 6b9:	e8 d2 fd ff ff       	call   490 <printf@plt>
    return (x+4);
 6be:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 6c1:	83 c0 04             	add    eax,0x4
}
 6c4:	83 c4 14             	add    esp,0x14
 6c7:	5b                   	pop    ebx
 6c8:	5d                   	pop    ebp
 6c9:	c3                   	ret    

000006ca <fifth_function>:

int fifth_function(int x)
{
 6ca:	55                   	push   ebp
 6cb:	89 e5                	mov    ebp,esp
 6cd:	53                   	push   ebx
 6ce:	83 ec 14             	sub    esp,0x14
 6d1:	e8 a1 fe ff ff       	call   577 <__i686.get_pc_thunk.bx>
 6d6:	81 c3 1e 19 00 00    	add    ebx,0x191e
    printf(" lib: %s\n", __FUNCTION__);
 6dc:	8d 83 5e e7 ff ff    	lea    eax,[ebx-0x18a2]
 6e2:	8d 93 68 e7 ff ff    	lea    edx,[ebx-0x1898]
 6e8:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 6ec:	89 04 24             	mov    DWORD PTR [esp],eax
 6ef:	e8 9c fd ff ff       	call   490 <printf@plt>
    return (x+5);
 6f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 6f7:	83 c0 05             	add    eax,0x5
}
 6fa:	83 c4 14             	add    esp,0x14
 6fd:	5b                   	pop    ebx
 6fe:	5d                   	pop    ebp
 6ff:	c3                   	ret    

00000700 <__do_global_ctors_aux>:
 700:	55                   	push   ebp
 701:	89 e5                	mov    ebp,esp
 703:	56                   	push   esi
 704:	53                   	push   ebx
 705:	e8 6d fe ff ff       	call   577 <__i686.get_pc_thunk.bx>
 70a:	81 c3 ea 18 00 00    	add    ebx,0x18ea
 710:	8b 83 10 ff ff ff    	mov    eax,DWORD PTR [ebx-0xf0]
 716:	83 f8 ff             	cmp    eax,0xffffffff
 719:	74 19                	je     734 <__do_global_ctors_aux+0x34>
 71b:	8d b3 10 ff ff ff    	lea    esi,[ebx-0xf0]
 721:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 728:	83 ee 04             	sub    esi,0x4
 72b:	ff d0                	call   eax
 72d:	8b 06                	mov    eax,DWORD PTR [esi]
 72f:	83 f8 ff             	cmp    eax,0xffffffff
 732:	75 f4                	jne    728 <__do_global_ctors_aux+0x28>
 734:	5b                   	pop    ebx
 735:	5e                   	pop    esi
 736:	5d                   	pop    ebp
 737:	c3                   	ret    

Disassembly of section .fini:

00000738 <_fini>:
 738:	53                   	push   ebx
 739:	83 ec 08             	sub    esp,0x8
 73c:	e8 00 00 00 00       	call   741 <_fini+0x9>
 741:	5b                   	pop    ebx
 742:	81 c3 b3 18 00 00    	add    ebx,0x18b3
 748:	e8 73 fd ff ff       	call   4c0 <__do_global_dtors_aux>
 74d:	83 c4 08             	add    esp,0x8
 750:	5b                   	pop    ebx
 751:	c3                   	ret    

Disassembly of section .rodata:

00000752 <__FUNCTION__.1721-0xa>:
 752:	20 6c 69 62          	and    BYTE PTR [ecx+ebp*2+0x62],ch
 756:	3a 20                	cmp    ah,BYTE PTR [eax]
 758:	25 73 0a 00 66       	and    eax,0x66000a73

0000075c <__FUNCTION__.1721>:
 75c:	66 69 66 74 68 5f    	imul   sp,WORD PTR [esi+0x74],0x5f68
 762:	66                   	data16
 763:	75 6e                	jne    7d3 <__FUNCTION__.1696+0x13>
 765:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 769:	6e                   	outs   dx,BYTE PTR ds:[esi]
	...

0000076b <__FUNCTION__.1717>:
 76b:	66 6f                	outs   dx,WORD PTR ds:[esi]
 76d:	75 72                	jne    7e1 <__FUNCTION__.1696+0x21>
 76f:	74 68                	je     7d9 <__FUNCTION__.1696+0x19>
 771:	5f                   	pop    edi
 772:	66                   	data16
 773:	75 6e                	jne    7e3 <__FUNCTION__.1696+0x23>
 775:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 779:	6e                   	outs   dx,BYTE PTR ds:[esi]
	...

0000077b <__FUNCTION__.1713>:
 77b:	74 68                	je     7e5 <__FUNCTION__.1696+0x25>
 77d:	69 72 64 5f 66 75 6e 	imul   esi,DWORD PTR [edx+0x64],0x6e75665f
 784:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 788:	6e                   	outs   dx,BYTE PTR ds:[esi]
	...

0000078a <__FUNCTION__.1709>:
 78a:	73 65                	jae    7f1 <__FUNCTION__.1696+0x31>
 78c:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 78f:	64                   	fs
 790:	5f                   	pop    edi
 791:	66                   	data16
 792:	75 6e                	jne    802 <__FUNCTION__.1696+0x42>
 794:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 798:	6e                   	outs   dx,BYTE PTR ds:[esi]
	...

0000079a <__FUNCTION__.1705>:
 79a:	66 69 72 73 74 5f    	imul   si,WORD PTR [edx+0x73],0x5f74
 7a0:	66                   	data16
 7a1:	75 6e                	jne    811 <__FUNCTION__.1696+0x51>
 7a3:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 7a7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 7a8:	5f                   	pop    edi
 7a9:	33 5f 30             	xor    ebx,DWORD PTR [edi+0x30]
	...

000007ad <__FUNCTION__.1700>:
 7ad:	66 69 72 73 74 5f    	imul   si,WORD PTR [edx+0x73],0x5f74
 7b3:	66                   	data16
 7b4:	75 6e                	jne    824 <__FUNCTION__.1696+0x64>
 7b6:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 7ba:	6e                   	outs   dx,BYTE PTR ds:[esi]
 7bb:	5f                   	pop    edi
 7bc:	32 5f 30             	xor    bl,BYTE PTR [edi+0x30]
	...

000007c0 <__FUNCTION__.1696>:
 7c0:	66 69 72 73 74 5f    	imul   si,WORD PTR [edx+0x73],0x5f74
 7c6:	66                   	data16
 7c7:	75 6e                	jne    837 <__FUNCTION__.1696+0x77>
 7c9:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 7cd:	6e                   	outs   dx,BYTE PTR ds:[esi]
 7ce:	5f                   	pop    edi
 7cf:	31 5f 30             	xor    DWORD PTR [edi+0x30],ebx
	...

Disassembly of section .eh_frame_hdr:

000007d4 <.eh_frame_hdr>:
 7d4:	01 1b                	add    DWORD PTR [ebx],ebx
 7d6:	03 3b                	add    edi,DWORD PTR [ebx]
 7d8:	48                   	dec    eax
 7d9:	00 00                	add    BYTE PTR [eax],al
 7db:	00 08                	add    BYTE PTR [eax],cl
 7dd:	00 00                	add    BYTE PTR [eax],al
 7df:	00 ac fc ff ff 64 00 	add    BYTE PTR [esp+edi*8+0x64ffff],ch
 7e6:	00 00                	add    BYTE PTR [eax],al
 7e8:	a8 fd                	test   al,0xfd
 7ea:	ff                   	(bad)  
 7eb:	ff 88 00 00 00 de    	dec    DWORD PTR [eax-0x22000000]
 7f1:	fd                   	std    
 7f2:	ff                   	(bad)  
 7f3:	ff ac 00 00 00 1a fe 	jmp    FWORD PTR [eax+eax*1-0x1e60000]
 7fa:	ff                   	(bad)  
 7fb:	ff d0                	call   eax
 7fd:	00 00                	add    BYTE PTR [eax],al
 7ff:	00 54 fe ff          	add    BYTE PTR [esi+edi*8-0x1],dl
 803:	ff f4                	push   esp
 805:	00 00                	add    BYTE PTR [eax],al
 807:	00 8a fe ff ff 18    	add    BYTE PTR [edx+0x18fffffe],cl
 80d:	01 00                	add    DWORD PTR [eax],eax
 80f:	00 c0                	add    al,al
 811:	fe                   	(bad)  
 812:	ff                   	(bad)  
 813:	ff                   	(bad)  
 814:	3c 01                	cmp    al,0x1
 816:	00 00                	add    BYTE PTR [eax],al
 818:	f6 fe                	idiv   dh
 81a:	ff                   	(bad)  
 81b:	ff 60 01             	jmp    DWORD PTR [eax+0x1]
	...

Disassembly of section .eh_frame:

00000820 <__FRAME_END__-0x138>:
 820:	14 00                	adc    al,0x0
 822:	00 00                	add    BYTE PTR [eax],al
 824:	00 00                	add    BYTE PTR [eax],al
 826:	00 00                	add    BYTE PTR [eax],al
 828:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 82b:	00 01                	add    BYTE PTR [ecx],al
 82d:	7c 08                	jl     837 <__FUNCTION__.1696+0x77>
 82f:	01 1b                	add    DWORD PTR [ebx],ebx
 831:	0c 04                	or     al,0x4
 833:	04 88                	add    al,0x88
 835:	01 00                	add    DWORD PTR [eax],eax
 837:	00 20                	add    BYTE PTR [eax],ah
 839:	00 00                	add    BYTE PTR [eax],al
 83b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 83e:	00 00                	add    BYTE PTR [eax],al
 840:	40                   	inc    eax
 841:	fc                   	cld    
 842:	ff                   	(bad)  
 843:	ff 40 00             	inc    DWORD PTR [eax+0x0]
 846:	00 00                	add    BYTE PTR [eax],al
 848:	00 0e                	add    BYTE PTR [esi],cl
 84a:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 84d:	0c 4a                	or     al,0x4a
 84f:	0f 0b                	ud2    
 851:	74 04                	je     857 <__FUNCTION__.1696+0x97>
 853:	78 00                	js     855 <__FUNCTION__.1696+0x95>
 855:	3f                   	aas    
 856:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 858:	2a 32                	sub    dh,BYTE PTR [edx]
 85a:	24 22                	and    al,0x22
 85c:	20 00                	and    BYTE PTR [eax],al
 85e:	00 00                	add    BYTE PTR [eax],al
 860:	40                   	inc    eax
 861:	00 00                	add    BYTE PTR [eax],al
 863:	00 18                	add    BYTE PTR [eax],bl
 865:	fd                   	std    
 866:	ff                   	(bad)  
 867:	ff 36                	push   DWORD PTR [esi]
 869:	00 00                	add    BYTE PTR [eax],al
 86b:	00 00                	add    BYTE PTR [eax],al
 86d:	41                   	inc    ecx
 86e:	0e                   	push   cs
 86f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 875:	44                   	inc    esp
 876:	83 03 6d             	add    DWORD PTR [ebx],0x6d
 879:	c3                   	ret    
 87a:	41                   	inc    ecx
 87b:	0c 04                	or     al,0x4
 87d:	04 c5                	add    al,0xc5
 87f:	00 20                	add    BYTE PTR [eax],ah
 881:	00 00                	add    BYTE PTR [eax],al
 883:	00 64 00 00          	add    BYTE PTR [eax+eax*1+0x0],ah
 887:	00 2a                	add    BYTE PTR [edx],ch
 889:	fd                   	std    
 88a:	ff                   	(bad)  
 88b:	ff                   	(bad)  
 88c:	3c 00                	cmp    al,0x0
 88e:	00 00                	add    BYTE PTR [eax],al
 890:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 893:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 899:	44                   	inc    esp
 89a:	83 03 73             	add    DWORD PTR [ebx],0x73
 89d:	c3                   	ret    
 89e:	41                   	inc    ecx
 89f:	0c 04                	or     al,0x4
 8a1:	04 c5                	add    al,0xc5
 8a3:	00 20                	add    BYTE PTR [eax],ah
 8a5:	00 00                	add    BYTE PTR [eax],al
 8a7:	00 88 00 00 00 42    	add    BYTE PTR [eax+0x42000000],cl
 8ad:	fd                   	std    
 8ae:	ff                   	(bad)  
 8af:	ff                   	(bad)  
 8b0:	3a 00                	cmp    al,BYTE PTR [eax]
 8b2:	00 00                	add    BYTE PTR [eax],al
 8b4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8b7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8bd:	44                   	inc    esp
 8be:	83 03 71             	add    DWORD PTR [ebx],0x71
 8c1:	c3                   	ret    
 8c2:	41                   	inc    ecx
 8c3:	0c 04                	or     al,0x4
 8c5:	04 c5                	add    al,0xc5
 8c7:	00 20                	add    BYTE PTR [eax],ah
 8c9:	00 00                	add    BYTE PTR [eax],al
 8cb:	00 ac 00 00 00 58 fd 	add    BYTE PTR [eax+eax*1-0x2a80000],ch
 8d2:	ff                   	(bad)  
 8d3:	ff 36                	push   DWORD PTR [esi]
 8d5:	00 00                	add    BYTE PTR [eax],al
 8d7:	00 00                	add    BYTE PTR [eax],al
 8d9:	41                   	inc    ecx
 8da:	0e                   	push   cs
 8db:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8e1:	44                   	inc    esp
 8e2:	83 03 6d             	add    DWORD PTR [ebx],0x6d
 8e5:	c3                   	ret    
 8e6:	41                   	inc    ecx
 8e7:	0c 04                	or     al,0x4
 8e9:	04 c5                	add    al,0xc5
 8eb:	00 20                	add    BYTE PTR [eax],ah
 8ed:	00 00                	add    BYTE PTR [eax],al
 8ef:	00 d0                	add    al,dl
 8f1:	00 00                	add    BYTE PTR [eax],al
 8f3:	00 6a fd             	add    BYTE PTR [edx-0x3],ch
 8f6:	ff                   	(bad)  
 8f7:	ff 36                	push   DWORD PTR [esi]
 8f9:	00 00                	add    BYTE PTR [eax],al
 8fb:	00 00                	add    BYTE PTR [eax],al
 8fd:	41                   	inc    ecx
 8fe:	0e                   	push   cs
 8ff:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 905:	44                   	inc    esp
 906:	83 03 6d             	add    DWORD PTR [ebx],0x6d
 909:	c3                   	ret    
 90a:	41                   	inc    ecx
 90b:	0c 04                	or     al,0x4
 90d:	04 c5                	add    al,0xc5
 90f:	00 20                	add    BYTE PTR [eax],ah
 911:	00 00                	add    BYTE PTR [eax],al
 913:	00 f4                	add    ah,dh
 915:	00 00                	add    BYTE PTR [eax],al
 917:	00 7c fd ff          	add    BYTE PTR [ebp+edi*8-0x1],bh
 91b:	ff 36                	push   DWORD PTR [esi]
 91d:	00 00                	add    BYTE PTR [eax],al
 91f:	00 00                	add    BYTE PTR [eax],al
 921:	41                   	inc    ecx
 922:	0e                   	push   cs
 923:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 929:	44                   	inc    esp
 92a:	83 03 6d             	add    DWORD PTR [ebx],0x6d
 92d:	c3                   	ret    
 92e:	41                   	inc    ecx
 92f:	0c 04                	or     al,0x4
 931:	04 c5                	add    al,0xc5
 933:	00 20                	add    BYTE PTR [eax],ah
 935:	00 00                	add    BYTE PTR [eax],al
 937:	00 18                	add    BYTE PTR [eax],bl
 939:	01 00                	add    DWORD PTR [eax],eax
 93b:	00 8e fd ff ff 36    	add    BYTE PTR [esi+0x36fffffd],cl
 941:	00 00                	add    BYTE PTR [eax],al
 943:	00 00                	add    BYTE PTR [eax],al
 945:	41                   	inc    ecx
 946:	0e                   	push   cs
 947:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 94d:	44                   	inc    esp
 94e:	83 03 6d             	add    DWORD PTR [ebx],0x6d
 951:	c3                   	ret    
 952:	41                   	inc    ecx
 953:	0c 04                	or     al,0x4
 955:	04 c5                	add    al,0xc5
	...

00000958 <__FRAME_END__>:
 958:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .ctors:

00001f04 <__CTOR_LIST__>:
    1f04:	ff                   	(bad)  
    1f05:	ff                   	(bad)  
    1f06:	ff                   	(bad)  
    1f07:	ff 00                	inc    DWORD PTR [eax]

00001f08 <__CTOR_END__>:
    1f08:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dtors:

00001f0c <__DTOR_LIST__>:
    1f0c:	ff                   	(bad)  
    1f0d:	ff                   	(bad)  
    1f0e:	ff                   	(bad)  
    1f0f:	ff 00                	inc    DWORD PTR [eax]

00001f10 <__DTOR_END__>:
    1f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .jcr:

00001f14 <__JCR_END__>:
    1f14:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

00001f18 <.dynamic>:
    1f18:	01 00                	add    DWORD PTR [eax],eax
    1f1a:	00 00                	add    BYTE PTR [eax],al
    1f1c:	69 00 00 00 0c 00    	imul   eax,DWORD PTR [eax],0xc0000
    1f22:	00 00                	add    BYTE PTR [eax],al
    1f24:	44                   	inc    esp
    1f25:	04 00                	add    al,0x0
    1f27:	00 0d 00 00 00 38    	add    BYTE PTR ds:0x38000000,cl
    1f2d:	07                   	pop    es
    1f2e:	00 00                	add    BYTE PTR [eax],al
    1f30:	f5                   	cmc    
    1f31:	fe                   	(bad)  
    1f32:	ff 6f 38             	jmp    FWORD PTR [edi+0x38]
    1f35:	01 00                	add    DWORD PTR [eax],eax
    1f37:	00 05 00 00 00 60    	add    BYTE PTR ds:0x60000000,al
    1f3d:	02 00                	add    al,BYTE PTR [eax]
    1f3f:	00 06                	add    BYTE PTR [esi],al
    1f41:	00 00                	add    BYTE PTR [eax],al
    1f43:	00 80 01 00 00 0a    	add    BYTE PTR [eax+0xa000001],al
    1f49:	00 00                	add    BYTE PTR [eax],al
    1f4b:	00 d4                	add    ah,dl
    1f4d:	00 00                	add    BYTE PTR [eax],al
    1f4f:	00 0b                	add    BYTE PTR [ebx],cl
    1f51:	00 00                	add    BYTE PTR [eax],al
    1f53:	00 10                	add    BYTE PTR [eax],dl
    1f55:	00 00                	add    BYTE PTR [eax],al
    1f57:	00 03                	add    BYTE PTR [ebx],al
    1f59:	00 00                	add    BYTE PTR [eax],al
    1f5b:	00 f4                	add    ah,dh
    1f5d:	1f                   	pop    ds
    1f5e:	00 00                	add    BYTE PTR [eax],al
    1f60:	02 00                	add    al,BYTE PTR [eax]
    1f62:	00 00                	add    BYTE PTR [eax],al
    1f64:	18 00                	sbb    BYTE PTR [eax],al
    1f66:	00 00                	add    BYTE PTR [eax],al
    1f68:	14 00                	adc    al,0x0
    1f6a:	00 00                	add    BYTE PTR [eax],al
    1f6c:	11 00                	adc    DWORD PTR [eax],eax
    1f6e:	00 00                	add    BYTE PTR [eax],al
    1f70:	17                   	pop    ss
    1f71:	00 00                	add    BYTE PTR [eax],al
    1f73:	00 2c 04             	add    BYTE PTR [esp+eax*1],ch
    1f76:	00 00                	add    BYTE PTR [eax],al
    1f78:	11 00                	adc    DWORD PTR [eax],eax
    1f7a:	00 00                	add    BYTE PTR [eax],al
    1f7c:	0c 04                	or     al,0x4
    1f7e:	00 00                	add    BYTE PTR [eax],al
    1f80:	12 00                	adc    al,BYTE PTR [eax]
    1f82:	00 00                	add    BYTE PTR [eax],al
    1f84:	20 00                	and    BYTE PTR [eax],al
    1f86:	00 00                	add    BYTE PTR [eax],al
    1f88:	13 00                	adc    eax,DWORD PTR [eax]
    1f8a:	00 00                	add    BYTE PTR [eax],al
    1f8c:	08 00                	or     BYTE PTR [eax],al
    1f8e:	00 00                	add    BYTE PTR [eax],al
    1f90:	fc                   	cld    
    1f91:	ff                   	(bad)  
    1f92:	ff 6f 50             	jmp    FWORD PTR [edi+0x50]
    1f95:	03 00                	add    eax,DWORD PTR [eax]
    1f97:	00 fd                	add    ch,bh
    1f99:	ff                   	(bad)  
    1f9a:	ff 6f 05             	jmp    FWORD PTR [edi+0x5]
    1f9d:	00 00                	add    BYTE PTR [eax],al
    1f9f:	00 fe                	add    dh,bh
    1fa1:	ff                   	(bad)  
    1fa2:	ff 6f dc             	jmp    FWORD PTR [edi-0x24]
    1fa5:	03 00                	add    eax,DWORD PTR [eax]
    1fa7:	00 ff                	add    bh,bh
    1fa9:	ff                   	(bad)  
    1faa:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    1fad:	00 00                	add    BYTE PTR [eax],al
    1faf:	00 f0                	add    al,dh
    1fb1:	ff                   	(bad)  
    1fb2:	ff 6f 34             	jmp    FWORD PTR [edi+0x34]
    1fb5:	03 00                	add    eax,DWORD PTR [eax]
    1fb7:	00 fa                	add    dl,bh
    1fb9:	ff                   	(bad)  
    1fba:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
	...

Disassembly of section .got:

00001fe8 <.got>:
	...

Disassembly of section .got.plt:

00001ff4 <.got.plt>:
    1ff4:	18 1f                	sbb    BYTE PTR [edi],bl
	...
    1ffe:	00 00                	add    BYTE PTR [eax],al
    2000:	96                   	xchg   esi,eax
    2001:	04 00                	add    al,0x0
    2003:	00 a6 04 00 00 b6    	add    BYTE PTR [esi-0x49fffffc],ah
    2009:	04 00                	add    al,0x0
	...

Disassembly of section .data:

0000200c <__dso_handle>:
    200c:	0c 20                	or     al,0x20
	...

Disassembly of section .bss:

00002010 <completed.6159>:
    2010:	00 00                	add    BYTE PTR [eax],al
	...

00002014 <dtor_idx.6161>:
    2014:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <LIBSIMPLE_1.0+0x78>
   a:	74 75                	je     81 <LIBSIMPLE_1.0+0x81>
   c:	2f                   	das    
   d:	4c                   	dec    esp
   e:	69 6e 61 72 6f 20 34 	imul   ebp,DWORD PTR [esi+0x61],0x34206f72
  15:	2e 36 2e 33 2d 31 75 	cs ss xor ebp,DWORD PTR cs:ss:0x75627531
  1c:	62 75 
  1e:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1f:	74 75                	je     96 <LIBSIMPLE_1.0+0x96>
  21:	35 29 20 34 2e       	xor    eax,0x2e342029
  26:	36 2e 33 00          	ss xor eax,DWORD PTR cs:ss:[eax]

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	7c 05                	jl     17 <LIBSIMPLE_1.0+0x17>
  12:	00 00                	add    BYTE PTR [eax],al
  14:	84 01                	test   BYTE PTR [ecx],al
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	66                   	data16
   1:	02 00                	add    al,BYTE PTR [eax]
   3:	00 02                	add    BYTE PTR [edx],al
   5:	00 00                	add    BYTE PTR [eax],al
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
   c:	e0 00                	loopne e <LIBSIMPLE_1.0+0xe>
   e:	00 00                	add    BYTE PTR [eax],al
  10:	01 d7                	add    edi,edx
  12:	00 00                	add    BYTE PTR [eax],al
  14:	00 36                	add    BYTE PTR [esi],dh
  16:	00 00                	add    BYTE PTR [eax],al
  18:	00 7c 05 00          	add    BYTE PTR [ebp+eax*1+0x0],bh
  1c:	00 00                	add    BYTE PTR [eax],al
  1e:	07                   	pop    es
  1f:	00 00                	add    BYTE PTR [eax],al
  21:	00 00                	add    BYTE PTR [eax],al
  23:	00 00                	add    BYTE PTR [eax],al
  25:	02 04 07             	add    al,BYTE PTR [edi+eax*1]
  28:	bb 00 00 00 02       	mov    ebx,0x2000000
  2d:	01 08                	add    DWORD PTR [eax],ecx
  2f:	12 01                	adc    al,BYTE PTR [ecx]
  31:	00 00                	add    BYTE PTR [eax],al
  33:	02 02                	add    al,BYTE PTR [edx]
  35:	07                   	pop    es
  36:	ff 00                	inc    DWORD PTR [eax]
  38:	00 00                	add    BYTE PTR [eax],al
  3a:	02 04 07             	add    al,BYTE PTR [edi+eax*1]
  3d:	b6 00                	mov    dh,0x0
  3f:	00 00                	add    BYTE PTR [eax],al
  41:	02 01                	add    al,BYTE PTR [ecx]
  43:	06                   	push   es
  44:	14 01                	adc    al,0x1
  46:	00 00                	add    BYTE PTR [eax],al
  48:	02 02                	add    al,BYTE PTR [edx]
  4a:	05 43 01 00 00       	add    eax,0x143
  4f:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [eax*1+0x746e69]
  56:	02 08                	add    cl,BYTE PTR [eax]
  58:	05 00 00 00 00       	add    eax,0x0
  5d:	02 08                	add    cl,BYTE PTR [eax]
  5f:	07                   	pop    es
  60:	b1 00                	mov    cl,0x0
  62:	00 00                	add    BYTE PTR [eax],al
  64:	02 04 05 05 00 00 00 	add    al,BYTE PTR [eax*1+0x5]
  6b:	02 01                	add    al,BYTE PTR [ecx]
  6d:	06                   	push   es
  6e:	1b 01                	sbb    eax,DWORD PTR [ecx]
  70:	00 00                	add    BYTE PTR [eax],al
  72:	04 01                	add    al,0x1
  74:	4d                   	dec    ebp
  75:	01 00                	add    DWORD PTR [eax],eax
  77:	00 01                	add    BYTE PTR [ecx],al
  79:	05 01 4f 00 00       	add    eax,0x4f01
  7e:	00 7c 05 00          	add    BYTE PTR [ebp+eax*1+0x0],bh
  82:	00 b2 05 00 00 00    	add    BYTE PTR [edx+0x5],dh
  88:	00 00                	add    BYTE PTR [eax],al
  8a:	00 ac 00 00 00 05 78 	add    BYTE PTR [eax+eax*1+0x78050000],ch
  91:	00 01                	add    BYTE PTR [ecx],al
  93:	05 4f 00 00 00       	add    eax,0x4f
  98:	02 91 00 06 0e 00    	add    dl,BYTE PTR [ecx+0xe0600]
  9e:	00 00                	add    BYTE PTR [eax],al
  a0:	bc 00 00 00 01       	mov    esp,0x1000000
  a5:	05 03 c0 07 00       	add    eax,0x7c003
  aa:	00 00                	add    BYTE PTR [eax],al
  ac:	07                   	pop    es
  ad:	6b 00 00             	imul   eax,DWORD PTR [eax],0x0
  b0:	00 bc 00 00 00 08 25 	add    BYTE PTR [eax+eax*1+0x25080000],bh
  b7:	00 00                	add    BYTE PTR [eax],al
  b9:	00 12                	add    BYTE PTR [edx],dl
  bb:	00 09                	add    BYTE PTR [ecx],cl
  bd:	ac                   	lods   al,BYTE PTR ds:[esi]
  be:	00 00                	add    BYTE PTR [eax],al
  c0:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
  c3:	ec                   	in     al,dx
  c4:	00 00                	add    BYTE PTR [eax],al
  c6:	00 01                	add    BYTE PTR [ecx],al
  c8:	0c 01                	or     al,0x1
  ca:	4f                   	dec    edi
  cb:	00 00                	add    BYTE PTR [eax],al
  cd:	00 b2 05 00 00 ee    	add    BYTE PTR [edx-0x11fffffb],dh
  d3:	05 00 00 38 00       	add    eax,0x380000
  d8:	00 00                	add    BYTE PTR [eax],al
  da:	fb                   	sti    
  db:	00 00                	add    BYTE PTR [eax],al
  dd:	00 05 78 00 01 0c    	add    BYTE PTR ds:0xc010078,al
  e3:	4f                   	dec    edi
  e4:	00 00                	add    BYTE PTR [eax],al
  e6:	00 02                	add    BYTE PTR [edx],al
  e8:	91                   	xchg   ecx,eax
  e9:	00 06                	add    BYTE PTR [esi],al
  eb:	0e                   	push   cs
  ec:	00 00                	add    BYTE PTR [eax],al
  ee:	00 fb                	add    bl,bh
  f0:	00 00                	add    BYTE PTR [eax],al
  f2:	00 01                	add    BYTE PTR [ecx],al
  f4:	05 03 ad 07 00       	add    eax,0x7ad03
  f9:	00 00                	add    BYTE PTR [eax],al
  fb:	09 ac 00 00 00 04 01 	or     DWORD PTR [eax+eax*1+0x1040000],ebp
 102:	30 01                	xor    BYTE PTR [ecx],al
 104:	00 00                	add    BYTE PTR [eax],al
 106:	01 13                	add    DWORD PTR [ebx],edx
 108:	01 4f 00             	add    DWORD PTR [edi+0x0],ecx
 10b:	00 00                	add    BYTE PTR [eax],al
 10d:	ee                   	out    dx,al
 10e:	05 00 00 28 06       	add    eax,0x6280000
 113:	00 00                	add    BYTE PTR [eax],al
 115:	70 00                	jo     117 <LIBSIMPLE_1.0+0x117>
 117:	00 00                	add    BYTE PTR [eax],al
 119:	48                   	dec    eax
 11a:	01 00                	add    DWORD PTR [eax],eax
 11c:	00 05 78 00 01 13    	add    BYTE PTR ds:0x13010078,al
 122:	4f                   	dec    edi
 123:	00 00                	add    BYTE PTR [eax],al
 125:	00 02                	add    BYTE PTR [edx],al
 127:	91                   	xchg   ecx,eax
 128:	00 0a                	add    BYTE PTR [edx],cl
 12a:	2b 00                	sub    eax,DWORD PTR [eax]
 12c:	00 00                	add    BYTE PTR [eax],al
 12e:	01 13                	add    DWORD PTR [ebx],edx
 130:	4f                   	dec    edi
 131:	00 00                	add    BYTE PTR [eax],al
 133:	00 02                	add    BYTE PTR [edx],al
 135:	91                   	xchg   ecx,eax
 136:	04 06                	add    al,0x6
 138:	0e                   	push   cs
 139:	00 00                	add    BYTE PTR [eax],al
 13b:	00 48 01             	add    BYTE PTR [eax+0x1],cl
 13e:	00 00                	add    BYTE PTR [eax],al
 140:	01 05 03 9a 07 00    	add    DWORD PTR ds:0x79a03,eax
 146:	00 00                	add    BYTE PTR [eax],al
 148:	09 ac 00 00 00 04 01 	or     DWORD PTR [eax+eax*1+0x1040000],ebp
 14f:	1b 00                	sbb    eax,DWORD PTR [eax]
 151:	00 00                	add    BYTE PTR [eax],al
 153:	01 19                	add    DWORD PTR [ecx],ebx
 155:	01 4f 00             	add    DWORD PTR [edi+0x0],ecx
 158:	00 00                	add    BYTE PTR [eax],al
 15a:	28 06                	sub    BYTE PTR [esi],al
 15c:	00 00                	add    BYTE PTR [eax],al
 15e:	5e                   	pop    esi
 15f:	06                   	push   es
 160:	00 00                	add    BYTE PTR [eax],al
 162:	a8 00                	test   al,0x0
 164:	00 00                	add    BYTE PTR [eax],al
 166:	87 01                	xchg   DWORD PTR [ecx],eax
 168:	00 00                	add    BYTE PTR [eax],al
 16a:	05 78 00 01 19       	add    eax,0x19010078
 16f:	4f                   	dec    edi
 170:	00 00                	add    BYTE PTR [eax],al
 172:	00 02                	add    BYTE PTR [edx],al
 174:	91                   	xchg   ecx,eax
 175:	00 06                	add    BYTE PTR [esi],al
 177:	0e                   	push   cs
 178:	00 00                	add    BYTE PTR [eax],al
 17a:	00 97 01 00 00 01    	add    BYTE PTR [edi+0x1000001],dl
 180:	05 03 8a 07 00       	add    eax,0x78a03
 185:	00 00                	add    BYTE PTR [eax],al
 187:	07                   	pop    es
 188:	6b 00 00             	imul   eax,DWORD PTR [eax],0x0
 18b:	00 97 01 00 00 08    	add    BYTE PTR [edi+0x8000001],dl
 191:	25 00 00 00 0f       	and    eax,0xf000000
 196:	00 09                	add    BYTE PTR [ecx],cl
 198:	87 01                	xchg   DWORD PTR [ecx],eax
 19a:	00 00                	add    BYTE PTR [eax],al
 19c:	04 01                	add    al,0x1
 19e:	a2 00 00 00 01       	mov    ds:0x1000000,al
 1a3:	1f                   	pop    ds
 1a4:	01 4f 00             	add    DWORD PTR [edi+0x0],ecx
 1a7:	00 00                	add    BYTE PTR [eax],al
 1a9:	5e                   	pop    esi
 1aa:	06                   	push   es
 1ab:	00 00                	add    BYTE PTR [eax],al
 1ad:	94                   	xchg   esp,eax
 1ae:	06                   	push   es
 1af:	00 00                	add    BYTE PTR [eax],al
 1b1:	e0 00                	loopne 1b3 <LIBSIMPLE_1.0+0x1b3>
 1b3:	00 00                	add    BYTE PTR [eax],al
 1b5:	d6                   	(bad)  
 1b6:	01 00                	add    DWORD PTR [eax],eax
 1b8:	00 05 78 00 01 1f    	add    BYTE PTR ds:0x1f010078,al
 1be:	4f                   	dec    edi
 1bf:	00 00                	add    BYTE PTR [eax],al
 1c1:	00 02                	add    BYTE PTR [edx],al
 1c3:	91                   	xchg   ecx,eax
 1c4:	00 06                	add    BYTE PTR [esi],al
 1c6:	0e                   	push   cs
 1c7:	00 00                	add    BYTE PTR [eax],al
 1c9:	00 e6                	add    dh,ah
 1cb:	01 00                	add    DWORD PTR [eax],eax
 1cd:	00 01                	add    BYTE PTR [ecx],al
 1cf:	05 03 7b 07 00       	add    eax,0x77b03
 1d4:	00 00                	add    BYTE PTR [eax],al
 1d6:	07                   	pop    es
 1d7:	6b 00 00             	imul   eax,DWORD PTR [eax],0x0
 1da:	00 e6                	add    dh,ah
 1dc:	01 00                	add    DWORD PTR [eax],eax
 1de:	00 08                	add    BYTE PTR [eax],cl
 1e0:	25 00 00 00 0e       	and    eax,0xe000000
 1e5:	00 09                	add    BYTE PTR [ecx],cl
 1e7:	d6                   	(bad)  
 1e8:	01 00                	add    DWORD PTR [eax],eax
 1ea:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
 1ed:	20 01                	and    BYTE PTR [ecx],al
 1ef:	00 00                	add    BYTE PTR [eax],al
 1f1:	01 25 01 4f 00 00    	add    DWORD PTR ds:0x4f01,esp
 1f7:	00 94 06 00 00 ca 06 	add    BYTE PTR [esi+eax*1+0x6ca0000],dl
 1fe:	00 00                	add    BYTE PTR [eax],al
 200:	18 01                	sbb    BYTE PTR [ecx],al
 202:	00 00                	add    BYTE PTR [eax],al
 204:	25 02 00 00 05       	and    eax,0x5000002
 209:	78 00                	js     20b <LIBSIMPLE_1.0+0x20b>
 20b:	01 25 4f 00 00 00    	add    DWORD PTR ds:0x4f,esp
 211:	02 91 00 06 0e 00    	add    dl,BYTE PTR [ecx+0xe0600]
 217:	00 00                	add    BYTE PTR [eax],al
 219:	25 02 00 00 01       	and    eax,0x1000002
 21e:	05 03 6b 07 00       	add    eax,0x76b03
 223:	00 00                	add    BYTE PTR [eax],al
 225:	09 87 01 00 00 04    	or     DWORD PTR [edi+0x4000001],eax
 22b:	01 c8                	add    eax,ecx
 22d:	00 00                	add    BYTE PTR [eax],al
 22f:	00 01                	add    BYTE PTR [ecx],al
 231:	2b 01                	sub    eax,DWORD PTR [ecx]
 233:	4f                   	dec    edi
 234:	00 00                	add    BYTE PTR [eax],al
 236:	00 ca                	add    dl,cl
 238:	06                   	push   es
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	00 07                	add    BYTE PTR [edi],al
 23d:	00 00                	add    BYTE PTR [eax],al
 23f:	50                   	push   eax
 240:	01 00                	add    DWORD PTR [eax],eax
 242:	00 64 02 00          	add    BYTE PTR [edx+eax*1+0x0],ah
 246:	00 05 78 00 01 2b    	add    BYTE PTR ds:0x2b010078,al
 24c:	4f                   	dec    edi
 24d:	00 00                	add    BYTE PTR [eax],al
 24f:	00 02                	add    BYTE PTR [edx],al
 251:	91                   	xchg   ecx,eax
 252:	00 06                	add    BYTE PTR [esi],al
 254:	0e                   	push   cs
 255:	00 00                	add    BYTE PTR [eax],al
 257:	00 64 02 00          	add    BYTE PTR [edx+eax*1+0x0],ah
 25b:	00 01                	add    BYTE PTR [ecx],al
 25d:	05 03 5c 07 00       	add    eax,0x75c03
 262:	00 00                	add    BYTE PTR [eax],al
 264:	09 d6                	or     esi,edx
 266:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
   8:	0e                   	push   cs
   9:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   b:	11 01                	adc    DWORD PTR [ecx],eax
   d:	12 01                	adc    al,BYTE PTR [ecx]
   f:	10 06                	adc    BYTE PTR [esi],al
  11:	00 00                	add    BYTE PTR [eax],al
  13:	02 24 00             	add    ah,BYTE PTR [eax+eax*1]
  16:	0b 0b                	or     ecx,DWORD PTR [ebx]
  18:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  1b:	0e                   	push   cs
  1c:	00 00                	add    BYTE PTR [eax],al
  1e:	03 24 00             	add    esp,DWORD PTR [eax+eax*1]
  21:	0b 0b                	or     ecx,DWORD PTR [ebx]
  23:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  26:	08 00                	or     BYTE PTR [eax],al
  28:	00 04 2e             	add    BYTE PTR [esi+ebp*1],al
  2b:	01 3f                	add    DWORD PTR [edi],edi
  2d:	0c 03                	or     al,0x3
  2f:	0e                   	push   cs
  30:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  32:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  34:	27                   	daa    
  35:	0c 49                	or     al,0x49
  37:	13 11                	adc    edx,DWORD PTR [ecx]
  39:	01 12                	add    DWORD PTR [edx],edx
  3b:	01 40 06             	add    DWORD PTR [eax+0x6],eax
  3e:	01 13                	add    DWORD PTR [ebx],edx
  40:	00 00                	add    BYTE PTR [eax],al
  42:	05 05 00 03 08       	add    eax,0x8030005
  47:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  49:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  4b:	49                   	dec    ecx
  4c:	13 02                	adc    eax,DWORD PTR [edx]
  4e:	0a 00                	or     al,BYTE PTR [eax]
  50:	00 06                	add    BYTE PTR [esi],al
  52:	34 00                	xor    al,0x0
  54:	03 0e                	add    ecx,DWORD PTR [esi]
  56:	49                   	dec    ecx
  57:	13 34 0c             	adc    esi,DWORD PTR [esp+ecx*1]
  5a:	02 0a                	add    cl,BYTE PTR [edx]
  5c:	00 00                	add    BYTE PTR [eax],al
  5e:	07                   	pop    es
  5f:	01 01                	add    DWORD PTR [ecx],eax
  61:	49                   	dec    ecx
  62:	13 01                	adc    eax,DWORD PTR [ecx]
  64:	13 00                	adc    eax,DWORD PTR [eax]
  66:	00 08                	add    BYTE PTR [eax],cl
  68:	21 00                	and    DWORD PTR [eax],eax
  6a:	49                   	dec    ecx
  6b:	13 2f                	adc    ebp,DWORD PTR [edi]
  6d:	0b 00                	or     eax,DWORD PTR [eax]
  6f:	00 09                	add    BYTE PTR [ecx],cl
  71:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
  75:	00 00                	add    BYTE PTR [eax],al
  77:	0a 05 00 03 0e 3a    	or     al,BYTE PTR ds:0x3a0e0300
  7d:	0b 3b                	or     edi,DWORD PTR [ebx]
  7f:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  82:	02 0a                	add    cl,BYTE PTR [edx]
  84:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	5b                   	pop    ebx
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 02                	add    BYTE PTR [edx],al
   5:	00 1f                	add    BYTE PTR [edi],bl
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 01                	add    BYTE PTR [ecx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	00 73 69             	add    BYTE PTR [ebx+0x69],dh
  1e:	6d                   	ins    DWORD PTR es:[edi],dx
  1f:	70 6c                	jo     8d <LIBSIMPLE_1.0+0x8d>
  21:	65 2e 63 00          	gs arpl WORD PTR cs:gs:[eax],ax
  25:	00 00                	add    BYTE PTR [eax],al
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 05 02 7c 05 00    	add    BYTE PTR ds:0x57c02,al
  2f:	00 17                	add    BYTE PTR [edi],dl
  31:	08 21                	or     BYTE PTR [ecx],ah
  33:	08 75 67             	or     BYTE PTR [ebp+0x67],dh
  36:	6a 08                	push   0x8
  38:	21 08                	and    DWORD PTR [eax],ecx
  3a:	75 bb                	jne    fffffff7 <_end+0xffffdfdf>
  3c:	6a 08                	push   0x8
  3e:	21 08                	and    DWORD PTR [eax],ecx
  40:	75 9f                	jne    ffffffe1 <_end+0xffffdfc9>
  42:	69 08 21 08 75 67    	imul   ecx,DWORD PTR [eax],0x67750821
  48:	69 08 21 08 75 67    	imul   ecx,DWORD PTR [eax],0x67750821
  4e:	69 08 21 08 75 67    	imul   ecx,DWORD PTR [eax],0x67750821
  54:	69 08 21 08 75 67    	imul   ecx,DWORD PTR [eax],0x67750821
  5a:	02 06                	add    al,BYTE PTR [esi]
  5c:	00 01                	add    BYTE PTR [ecx],al
  5e:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6c                   	ins    BYTE PTR es:[edi],dx
   1:	6f                   	outs   dx,DWORD PTR ds:[esi]
   2:	6e                   	outs   dx,BYTE PTR ds:[esi]
   3:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
   7:	6e                   	outs   dx,BYTE PTR ds:[esi]
   8:	67 20 69 6e          	and    BYTE PTR [bx+di+0x6e],ch
   c:	74 00                	je     e <LIBSIMPLE_1.0+0xe>
   e:	5f                   	pop    edi
   f:	5f                   	pop    edi
  10:	46                   	inc    esi
  11:	55                   	push   ebp
  12:	4e                   	dec    esi
  13:	43                   	inc    ebx
  14:	54                   	push   esp
  15:	49                   	dec    ecx
  16:	4f                   	dec    edi
  17:	4e                   	dec    esi
  18:	5f                   	pop    edi
  19:	5f                   	pop    edi
  1a:	00 73 65             	add    BYTE PTR [ebx+0x65],dh
  1d:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
  20:	64                   	fs
  21:	5f                   	pop    edi
  22:	66                   	data16
  23:	75 6e                	jne    93 <LIBSIMPLE_1.0+0x93>
  25:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  29:	6e                   	outs   dx,BYTE PTR ds:[esi]
  2a:	00 6e 6f             	add    BYTE PTR [esi+0x6f],ch
  2d:	72 6d                	jb     9c <LIBSIMPLE_1.0+0x9c>
  2f:	66 61                	popaw  
  31:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
  35:	00 2f                	add    BYTE PTR [edi],ch
  37:	68 6f 6d 65 2f       	push   0x2f656d6f
  3c:	6d                   	ins    DWORD PTR es:[edi],dx
  3d:	69 6c 61 6e 2f 44 65 	imul   ebp,DWORD PTR [ecx+eiz*2+0x6e],0x7365442f
  44:	73 
  45:	6b 74 6f 70 2f       	imul   esi,DWORD PTR [edi+ebp*2+0x70],0x2f
  4a:	73 79                	jae    c5 <LIBSIMPLE_1.0+0xc5>
  4c:	6d                   	ins    DWORD PTR es:[edi],dx
  4d:	62 6f 6c             	bound  ebp,QWORD PTR [edi+0x6c]
  50:	56                   	push   esi
  51:	65                   	gs
  52:	72 73                	jb     c7 <LIBSIMPLE_1.0+0xc7>
  54:	69 6f 6e 69 6e 67 52 	imul   ebp,DWORD PTR [edi+0x6e],0x52676e69
  5b:	65                   	gs
  5c:	73 65                	jae    c3 <LIBSIMPLE_1.0+0xc3>
  5e:	61                   	popa   
  5f:	72 63                	jb     c4 <LIBSIMPLE_1.0+0xc4>
  61:	68 2f 76 65 72       	push   0x7265762f
  66:	73 69                	jae    d1 <LIBSIMPLE_1.0+0xd1>
  68:	6f                   	outs   dx,DWORD PTR ds:[esi]
  69:	6e                   	outs   dx,BYTE PTR ds:[esi]
  6a:	69 6e 67 44 65 6d 6f 	imul   ebp,DWORD PTR [esi+0x67],0x6f6d6544
  71:	73 5f                	jae    d2 <LIBSIMPLE_1.0+0xd2>
  73:	6e                   	outs   dx,BYTE PTR ds:[esi]
  74:	69 63 65 72 2f 30 33 	imul   esp,DWORD PTR [ebx+0x65],0x33302f72
  7b:	5f                   	pop    edi
  7c:	61                   	popa   
  7d:	62 69 46             	bound  ebp,QWORD PTR [ecx+0x46]
  80:	75 6e                	jne    f0 <LIBSIMPLE_1.0+0xf0>
  82:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  86:	6e                   	outs   dx,BYTE PTR ds:[esi]
  87:	53                   	push   ebx
  88:	69 67 6e 61 74 75 72 	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  8f:	65                   	gs
  90:	43                   	inc    ebx
  91:	68 61 6e 67 65       	push   0x65676e61
  96:	64                   	fs
  97:	2f                   	das    
  98:	73 68                	jae    102 <LIBSIMPLE_1.0+0x102>
  9a:	61                   	popa   
  9b:	72 65                	jb     102 <LIBSIMPLE_1.0+0x102>
  9d:	64                   	fs
  9e:	4c                   	dec    esp
  9f:	69 62 00 74 68 69 72 	imul   esp,DWORD PTR [edx+0x0],0x72696874
  a6:	64                   	fs
  a7:	5f                   	pop    edi
  a8:	66                   	data16
  a9:	75 6e                	jne    119 <LIBSIMPLE_1.0+0x119>
  ab:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  af:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b0:	00 6c 6f 6e          	add    BYTE PTR [edi+ebp*2+0x6e],ch
  b4:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
  b8:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b9:	67 20 75 6e          	and    BYTE PTR [di+0x6e],dh
  bd:	73 69                	jae    128 <LIBSIMPLE_1.0+0x128>
  bf:	67 6e                	outs   dx,BYTE PTR ds:[si]
  c1:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[ecx+0x6e],ch
  c6:	74 00                	je     c8 <LIBSIMPLE_1.0+0xc8>
  c8:	66 69 66 74 68 5f    	imul   sp,WORD PTR [esi+0x74],0x5f68
  ce:	66                   	data16
  cf:	75 6e                	jne    13f <LIBSIMPLE_1.0+0x13f>
  d1:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  d5:	6e                   	outs   dx,BYTE PTR ds:[esi]
  d6:	00 73 69             	add    BYTE PTR [ebx+0x69],dh
  d9:	6d                   	ins    DWORD PTR es:[edi],dx
  da:	70 6c                	jo     148 <LIBSIMPLE_1.0+0x148>
  dc:	65 2e 63 00          	gs arpl WORD PTR cs:gs:[eax],ax
  e0:	47                   	inc    edi
  e1:	4e                   	dec    esi
  e2:	55                   	push   ebp
  e3:	20 43 20             	and    BYTE PTR [ebx+0x20],al
  e6:	34 2e                	xor    al,0x2e
  e8:	36 2e 33 00          	ss xor eax,DWORD PTR cs:ss:[eax]
  ec:	66 69 72 73 74 5f    	imul   si,WORD PTR [edx+0x73],0x5f74
  f2:	66                   	data16
  f3:	75 6e                	jne    163 <LIBSIMPLE_1.0+0x163>
  f5:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  f9:	6e                   	outs   dx,BYTE PTR ds:[esi]
  fa:	5f                   	pop    edi
  fb:	32 5f 30             	xor    bl,BYTE PTR [edi+0x30]
  fe:	00 73 68             	add    BYTE PTR [ebx+0x68],dh
 101:	6f                   	outs   dx,DWORD PTR ds:[esi]
 102:	72 74                	jb     178 <LIBSIMPLE_1.0+0x178>
 104:	20 75 6e             	and    BYTE PTR [ebp+0x6e],dh
 107:	73 69                	jae    172 <LIBSIMPLE_1.0+0x172>
 109:	67 6e                	outs   dx,BYTE PTR ds:[si]
 10b:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[ecx+0x6e],ch
 110:	74 00                	je     112 <LIBSIMPLE_1.0+0x112>
 112:	75 6e                	jne    182 <LIBSIMPLE_1.0+0x182>
 114:	73 69                	jae    17f <LIBSIMPLE_1.0+0x17f>
 116:	67 6e                	outs   dx,BYTE PTR ds:[si]
 118:	65 64 20 63 68       	gs and BYTE PTR fs:gs:[ebx+0x68],ah
 11d:	61                   	popa   
 11e:	72 00                	jb     120 <LIBSIMPLE_1.0+0x120>
 120:	66 6f                	outs   dx,WORD PTR ds:[esi]
 122:	75 72                	jne    196 <LIBSIMPLE_1.0+0x196>
 124:	74 68                	je     18e <LIBSIMPLE_1.0+0x18e>
 126:	5f                   	pop    edi
 127:	66                   	data16
 128:	75 6e                	jne    198 <LIBSIMPLE_1.0+0x198>
 12a:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 12e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 12f:	00 66 69             	add    BYTE PTR [esi+0x69],ah
 132:	72 73                	jb     1a7 <LIBSIMPLE_1.0+0x1a7>
 134:	74 5f                	je     195 <LIBSIMPLE_1.0+0x195>
 136:	66                   	data16
 137:	75 6e                	jne    1a7 <LIBSIMPLE_1.0+0x1a7>
 139:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 13d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 13e:	5f                   	pop    edi
 13f:	33 5f 30             	xor    ebx,DWORD PTR [edi+0x30]
 142:	00 73 68             	add    BYTE PTR [ebx+0x68],dh
 145:	6f                   	outs   dx,DWORD PTR ds:[esi]
 146:	72 74                	jb     1bc <LIBSIMPLE_1.0+0x1bc>
 148:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
 14b:	74 00                	je     14d <LIBSIMPLE_1.0+0x14d>
 14d:	66 69 72 73 74 5f    	imul   si,WORD PTR [edx+0x73],0x5f74
 153:	66                   	data16
 154:	75 6e                	jne    1c4 <LIBSIMPLE_1.0+0x1c4>
 156:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 15a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 15b:	5f                   	pop    edi
 15c:	31 5f 30             	xor    DWORD PTR [edi+0x30],ebx
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    BYTE PTR [eax],al
   2:	00 00                	add    BYTE PTR [eax],al
   4:	01 00                	add    DWORD PTR [eax],eax
   6:	00 00                	add    BYTE PTR [eax],al
   8:	02 00                	add    al,BYTE PTR [eax]
   a:	74 04                	je     10 <LIBSIMPLE_1.0+0x10>
   c:	01 00                	add    DWORD PTR [eax],eax
   e:	00 00                	add    BYTE PTR [eax],al
  10:	03 00                	add    eax,DWORD PTR [eax]
  12:	00 00                	add    BYTE PTR [eax],al
  14:	02 00                	add    al,BYTE PTR [eax]
  16:	74 08                	je     20 <LIBSIMPLE_1.0+0x20>
  18:	03 00                	add    eax,DWORD PTR [eax]
  1a:	00 00                	add    BYTE PTR [eax],al
  1c:	35 00 00 00 02       	xor    eax,0x2000000
  21:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  24:	35 00 00 00 36       	xor    eax,0x36000000
  29:	00 00                	add    BYTE PTR [eax],al
  2b:	00 02                	add    BYTE PTR [edx],al
  2d:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
  31:	00 00                	add    BYTE PTR [eax],al
  33:	00 00                	add    BYTE PTR [eax],al
  35:	00 00                	add    BYTE PTR [eax],al
  37:	00 36                	add    BYTE PTR [esi],dh
  39:	00 00                	add    BYTE PTR [eax],al
  3b:	00 37                	add    BYTE PTR [edi],dh
  3d:	00 00                	add    BYTE PTR [eax],al
  3f:	00 02                	add    BYTE PTR [edx],al
  41:	00 74 04 37          	add    BYTE PTR [esp+eax*1+0x37],dh
  45:	00 00                	add    BYTE PTR [eax],al
  47:	00 39                	add    BYTE PTR [ecx],bh
  49:	00 00                	add    BYTE PTR [eax],al
  4b:	00 02                	add    BYTE PTR [edx],al
  4d:	00 74 08 39          	add    BYTE PTR [eax+ecx*1+0x39],dh
  51:	00 00                	add    BYTE PTR [eax],al
  53:	00 71 00             	add    BYTE PTR [ecx+0x0],dh
  56:	00 00                	add    BYTE PTR [eax],al
  58:	02 00                	add    al,BYTE PTR [eax]
  5a:	75 08                	jne    64 <LIBSIMPLE_1.0+0x64>
  5c:	71 00                	jno    5e <LIBSIMPLE_1.0+0x5e>
  5e:	00 00                	add    BYTE PTR [eax],al
  60:	72 00                	jb     62 <LIBSIMPLE_1.0+0x62>
  62:	00 00                	add    BYTE PTR [eax],al
  64:	02 00                	add    al,BYTE PTR [eax]
  66:	74 04                	je     6c <LIBSIMPLE_1.0+0x6c>
	...
  70:	72 00                	jb     72 <LIBSIMPLE_1.0+0x72>
  72:	00 00                	add    BYTE PTR [eax],al
  74:	73 00                	jae    76 <LIBSIMPLE_1.0+0x76>
  76:	00 00                	add    BYTE PTR [eax],al
  78:	02 00                	add    al,BYTE PTR [eax]
  7a:	74 04                	je     80 <LIBSIMPLE_1.0+0x80>
  7c:	73 00                	jae    7e <LIBSIMPLE_1.0+0x7e>
  7e:	00 00                	add    BYTE PTR [eax],al
  80:	75 00                	jne    82 <LIBSIMPLE_1.0+0x82>
  82:	00 00                	add    BYTE PTR [eax],al
  84:	02 00                	add    al,BYTE PTR [eax]
  86:	74 08                	je     90 <LIBSIMPLE_1.0+0x90>
  88:	75 00                	jne    8a <LIBSIMPLE_1.0+0x8a>
  8a:	00 00                	add    BYTE PTR [eax],al
  8c:	ab                   	stos   DWORD PTR es:[edi],eax
  8d:	00 00                	add    BYTE PTR [eax],al
  8f:	00 02                	add    BYTE PTR [edx],al
  91:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  94:	ab                   	stos   DWORD PTR es:[edi],eax
  95:	00 00                	add    BYTE PTR [eax],al
  97:	00 ac 00 00 00 02 00 	add    BYTE PTR [eax+eax*1+0x20000],ch
  9e:	74 04                	je     a4 <LIBSIMPLE_1.0+0xa4>
	...
  a8:	ac                   	lods   al,BYTE PTR ds:[esi]
  a9:	00 00                	add    BYTE PTR [eax],al
  ab:	00 ad 00 00 00 02    	add    BYTE PTR [ebp+0x2000000],ch
  b1:	00 74 04 ad          	add    BYTE PTR [esp+eax*1-0x53],dh
  b5:	00 00                	add    BYTE PTR [eax],al
  b7:	00 af 00 00 00 02    	add    BYTE PTR [edi+0x2000000],ch
  bd:	00 74 08 af          	add    BYTE PTR [eax+ecx*1-0x51],dh
  c1:	00 00                	add    BYTE PTR [eax],al
  c3:	00 e1                	add    cl,ah
  c5:	00 00                	add    BYTE PTR [eax],al
  c7:	00 02                	add    BYTE PTR [edx],al
  c9:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  cc:	e1 00                	loope  ce <LIBSIMPLE_1.0+0xce>
  ce:	00 00                	add    BYTE PTR [eax],al
  d0:	e2 00                	loop   d2 <LIBSIMPLE_1.0+0xd2>
  d2:	00 00                	add    BYTE PTR [eax],al
  d4:	02 00                	add    al,BYTE PTR [eax]
  d6:	74 04                	je     dc <LIBSIMPLE_1.0+0xdc>
	...
  e0:	e2 00                	loop   e2 <LIBSIMPLE_1.0+0xe2>
  e2:	00 00                	add    BYTE PTR [eax],al
  e4:	e3 00                	jecxz  e6 <LIBSIMPLE_1.0+0xe6>
  e6:	00 00                	add    BYTE PTR [eax],al
  e8:	02 00                	add    al,BYTE PTR [eax]
  ea:	74 04                	je     f0 <LIBSIMPLE_1.0+0xf0>
  ec:	e3 00                	jecxz  ee <LIBSIMPLE_1.0+0xee>
  ee:	00 00                	add    BYTE PTR [eax],al
  f0:	e5 00                	in     eax,0x0
  f2:	00 00                	add    BYTE PTR [eax],al
  f4:	02 00                	add    al,BYTE PTR [eax]
  f6:	74 08                	je     100 <LIBSIMPLE_1.0+0x100>
  f8:	e5 00                	in     eax,0x0
  fa:	00 00                	add    BYTE PTR [eax],al
  fc:	17                   	pop    ss
  fd:	01 00                	add    DWORD PTR [eax],eax
  ff:	00 02                	add    BYTE PTR [edx],al
 101:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 104:	17                   	pop    ss
 105:	01 00                	add    DWORD PTR [eax],eax
 107:	00 18                	add    BYTE PTR [eax],bl
 109:	01 00                	add    DWORD PTR [eax],eax
 10b:	00 02                	add    BYTE PTR [edx],al
 10d:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 111:	00 00                	add    BYTE PTR [eax],al
 113:	00 00                	add    BYTE PTR [eax],al
 115:	00 00                	add    BYTE PTR [eax],al
 117:	00 18                	add    BYTE PTR [eax],bl
 119:	01 00                	add    DWORD PTR [eax],eax
 11b:	00 19                	add    BYTE PTR [ecx],bl
 11d:	01 00                	add    DWORD PTR [eax],eax
 11f:	00 02                	add    BYTE PTR [edx],al
 121:	00 74 04 19          	add    BYTE PTR [esp+eax*1+0x19],dh
 125:	01 00                	add    DWORD PTR [eax],eax
 127:	00 1b                	add    BYTE PTR [ebx],bl
 129:	01 00                	add    DWORD PTR [eax],eax
 12b:	00 02                	add    BYTE PTR [edx],al
 12d:	00 74 08 1b          	add    BYTE PTR [eax+ecx*1+0x1b],dh
 131:	01 00                	add    DWORD PTR [eax],eax
 133:	00 4d 01             	add    BYTE PTR [ebp+0x1],cl
 136:	00 00                	add    BYTE PTR [eax],al
 138:	02 00                	add    al,BYTE PTR [eax]
 13a:	75 08                	jne    144 <LIBSIMPLE_1.0+0x144>
 13c:	4d                   	dec    ebp
 13d:	01 00                	add    DWORD PTR [eax],eax
 13f:	00 4e 01             	add    BYTE PTR [esi+0x1],cl
 142:	00 00                	add    BYTE PTR [eax],al
 144:	02 00                	add    al,BYTE PTR [eax]
 146:	74 04                	je     14c <LIBSIMPLE_1.0+0x14c>
	...
 150:	4e                   	dec    esi
 151:	01 00                	add    DWORD PTR [eax],eax
 153:	00 4f 01             	add    BYTE PTR [edi+0x1],cl
 156:	00 00                	add    BYTE PTR [eax],al
 158:	02 00                	add    al,BYTE PTR [eax]
 15a:	74 04                	je     160 <LIBSIMPLE_1.0+0x160>
 15c:	4f                   	dec    edi
 15d:	01 00                	add    DWORD PTR [eax],eax
 15f:	00 51 01             	add    BYTE PTR [ecx+0x1],dl
 162:	00 00                	add    BYTE PTR [eax],al
 164:	02 00                	add    al,BYTE PTR [eax]
 166:	74 08                	je     170 <LIBSIMPLE_1.0+0x170>
 168:	51                   	push   ecx
 169:	01 00                	add    DWORD PTR [eax],eax
 16b:	00 83 01 00 00 02    	add    BYTE PTR [ebx+0x2000001],al
 171:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 174:	83 01 00             	add    DWORD PTR [ecx],0x0
 177:	00 84 01 00 00 02 00 	add    BYTE PTR [ecx+eax*1+0x20000],al
 17e:	74 04                	je     184 <LIBSIMPLE_1.0+0x184>
	...
